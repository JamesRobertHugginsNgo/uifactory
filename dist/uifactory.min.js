"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function stringToHtml(e){var t=document.createElement("div");return t.innerHTML=e,_toConsumableArray(t.childNodes).map(function(e){return e instanceof HTMLElement?uiFactory(e):e})}var uiFactoryPropertyDescriptors={definedByUiFactoryPropertyDescriptors:{value:!0},uiFactoryAttributes:{writable:!0},uiFactoryChildElements:{writable:!0},render:{value:function(e,t){var a=this,c=!(1<arguments.length&&void 0!==t)||t;return Promise.all([function r(n,t,o){if(null!=n)return n instanceof Promise?n.then(function(e){return r(e,t,o)}):"function"==typeof n?r(n(a),t,o):Array.isArray(n)?Promise.all(n.map(function(e,t){return r(e,t,n)})):"object"===_typeof(n)?Promise.all(Object.keys(n).map(function(e){return a.removeAttribute(e),r(n[e],e,n)})):void(t&&("function"!=typeof o[t]&&delete o[t],a.setAttribute(t,n)))}(this.uiFactoryAttributes),function(e){for(;a.firstChild;)a.removeChild(a.firstChild);return function r(n,o,t,i){if(o=o||a.appendChild(document.createTextNode("")),null!=n){if(n instanceof Promise)return n.then(function(e){return r(e,o,t,i)});if("function"==typeof n)return r(n(a),o,t,i);if(Array.isArray(n)){var e=Promise.all(n.map(function(e,t){return r(e,a.insertBefore(document.createTextNode(""),o),n,t)}));return a.removeChild(o),e}if(n instanceof HTMLElement||n instanceof Text)return a.insertBefore(n,o),a.removeChild(o),c&&n.definedByUiFactoryPropertyDescriptors?new Promise(function(e){n.render(e)}):void 0;if("object"!==_typeof(n))return"boolean"==typeof n||"number"==typeof n||"string"==typeof n?(n=stringToHtml(n),t&&i&&"function"!=typeof t[i]&&(t[i]=n),r(n,o,t,i)):void 0;var u=Promise.all(Object.keys(n).map(function(e){return r(n[e],a.insertBefore(document.createTextNode(""),o),n,e)}));return a.removeChild(o),u}a.removeChild(o)}(e)}(this.uiFactoryChildElements)]).then(function(){e&&e(a)}),this}}};function uiFactory(e,t,r,n){"string"==typeof e&&(e=document.createElement(e)),e.definedByUiFactoryPropertyDescriptors||Object.defineProperties(e,uiFactoryPropertyDescriptors),e.uiFactoryAttributes=t,e.uiFactoryChildElements=r;var o,i=_toConsumableArray(e.childNodes).map(function(e){return e instanceof HTMLElement?uiFactory(e):e});0<i.length&&(e.uiFactoryChildElements=e.uiFactoryChildElements?Array.isArray(e.uiFactoryChildElements)?e.uiFactoryChildElements:[e.uiFactoryChildElements]:[],(o=e.uiFactoryChildElements).unshift.apply(o,_toConsumableArray(i)));return e.render(n,!1)}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
